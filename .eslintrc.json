{
  "root": true,
  "ignorePatterns": [
    "projects/**/*"
  ],
  "overrides": [
    {
      "files": [
        "*.ts"
      ],
      "parserOptions": {
        "project": [
          "tsconfig.json"
        ],
        "createDefaultProgram": true
      },
      "extends": [
        "plugin:@angular-eslint/recommended",
        "plugin:@angular-eslint/template/process-inline-templates"
      ],
      "rules": {
        "@angular-eslint/directive-selector": [
          "error",
          {
            "type": "attribute",
            "prefix": "app",
            "style": "camelCase"
          }
        ],
        "@angular-eslint/component-selector": [
          "error",
          {
            "type": "element",
            "prefix": "app",
            "style": "kebab-case"
          }
        ],
        "@angular-eslint/no-input-rename": "off",
        "@angular-eslint/no-output-rename": "off",
        "no-invalid-this": "off",
        "no-param-reassign": "error",
        "no-useless-return": "error",
        "@typescript-eslint/method-signature-style": [
          "error",
          "method"
        ],
        "prefer-arrow-callback": "off",
        "@typescript-eslint/no-require-imports": "error",
        "@typescript-eslint/no-object-literal-type-assertion": "off",
        "@typescript-eslint/no-unnecessary-type-assertion": "error",
        "no-eq-null": "error",
        "prefer-template": "error",
        "no-template-curly-in-string": "error",
        "no-plusplus": [
          "error",
          {
            "allowForLoopAfterthoughts": true
          }
        ],
        "use-isnan": "error",
        "no-cond-assign": "error",
        "complexity": [
          "error",
          20
        ],
        "@typescript-eslint/naming-convention": [
          "error",
          {
            "selector": "variable",
            "modifiers": [
              "const"
            ],
            "format": [
              "PascalCase",
              "UPPER_CASE",
              "camelCase"
            ]
          },
          {
            "selector": "variable",
            "format": [
              "camelCase",
              "UPPER_CASE"
            ],
            "leadingUnderscore": "allow",
            "trailingUnderscore": "allow"
          },
          {
            "selector": "parameter",
            "format": [
              "camelCase"
            ],
            "leadingUnderscore": "allow"
          },
          {
            "selector": "memberLike",
            "modifiers": [
              "private"
            ],
            "format": [
              "camelCase"
            ],
            "leadingUnderscore": "allow"
          },
          {
            "selector": "typeLike",
            "format": [
              "PascalCase"
            ]
          },
          {
            "selector": "interface",
            "format": [
              "PascalCase"
            ]
          },
          {
            "selector": "class",
            "format": [
              "PascalCase"
            ]
          }
        ],
        "max-classes-per-file": [
          "error",
          2
        ],
        "no-multiple-empty-lines": "error",
        "comma-dangle": "error",
        "curly": "error",
        "no-else-return": [
          "error",
          {
            "allowElseIf": true
          }
        ],
        "@typescript-eslint/array-type": [
          "error"
        ],
        "no-multi-spaces": "error",
        "object-curly-spacing": [
          "error",
          "always"
        ],
        "@typescript-eslint/member-ordering": [
          "error",
          {
            "default": [
              "public-static-field",
              "protected-static-field",
              "private-static-field",
              "public-static-method",
              "protected-static-method",
              "private-static-method",
              "public-instance-field",
              "protected-instance-field",
              "private-instance-field",
              "public-constructor",
              "protected-constructor",
              "private-constructor",
              "public-instance-method",
              "protected-instance-method",
              "private-instance-method"
            ]
          }
        ],
        "constructor-super": "error",
        "no-eval": "error",
        "@typescript-eslint/no-inferrable-types": "off",
        "@typescript-eslint/no-misused-new": "error",
        "@typescript-eslint/no-non-null-assertion": "error",
        "no-redeclare": "error",
        "no-throw-literal": "error",
        "no-fallthrough": "error",
        "no-trailing-spaces": "error",
        "no-undef-init": "error",
        "prefer-const": "error",
        "@typescript-eslint/no-unused-vars": [
          "error",
          {
            "argsIgnorePattern": "^_",
            "varsIgnorePattern": "^_",
            "caughtErrorsIgnorePattern": "^_"
          }
        ],
        "@typescript-eslint/consistent-type-definitions": [
          "error",
          "interface"
        ],
        "@typescript-eslint/no-invalid-void-type": [
          "off",
          {
            "allowInGenericTypeArguments": [
              "EventEmitter",
              "Promise",
              "Observable"
            ]
          }
        ],
        "@typescript-eslint/typedef": [
          "error",
          {
            "arrowParameter": false,
            "parameter": false,
            "propertyDeclaration": true
          }
        ],
        "@typescript-eslint/explicit-function-return-type": [
          "error",
          {
            "allowTypedFunctionExpressions": false
          }
        ]
      }
    },
    {
      "files": [
        "*.html"
      ],
      "extends": [
        "plugin:@angular-eslint/template/recommended"
      ],
      "rules": {
        "@angular-eslint/template/banana-in-box": "error",
        "@angular-eslint/template/no-negated-async": "error"
      }
    }
  ]
}
